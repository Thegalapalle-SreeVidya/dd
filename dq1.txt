import streamlit as st
import pandas as pd
import altair as alt
from io import BytesIO
import zipfile
import os

# Sample Data for Demonstration
df = pd.DataFrame({
    'Category': ['A', 'B', 'C', 'D'],
    'Values': [10, 20, 30, 40]
})

def save_chart_as_image(chart, filename):
    buf = BytesIO()
    chart.save(buf, format='png')
    buf.seek(0)
    with open(filename, 'wb') as f:
        f.write(buf.getbuffer())

def create_zip_file():
    # Create a zip file
    with zipfile.ZipFile('tabs_content.zip', 'w') as zf:
        # Save data as CSV
        df.to_csv('data.csv', index=False)
        zf.write('data.csv')

        # Save charts as images
        chart = df.plot(kind='bar', x='Category', y='Values')
        chart.figure.savefig("chart1.png")
        zf.write('chart1.png')

        chart.figure.savefig("chart2.png")
        zf.write('chart2.png')

    # Read the zip file for download
    with open('tabs_content.zip', 'rb') as f:
        return BytesIO(f.read())

st.title("Streamlit Tabs with Download Option")

tabs = st.tabs(["Tab 1", "Tab 2", "Download"])

with tabs[0]:
    st.header("Tab 1: Data and Chart")
    st.write(df)
    chart1 = alt.Chart(df).mark_bar().encode(
        x='Category',
        y='Values'
    )
    st.altair_chart(chart1, use_container_width=True)

with tabs[1]:
    st.header("Tab 2: Chart")
    chart2 = alt.Chart(df).mark_bar().encode(
        x='Category',
        y='Values'
    )
    st.altair_chart(chart2, use_container_width=True)

with tabs[2]:
    st.header("Download Tabs Content")

    zip_buffer = create_zip_file()
    st.download_button(label="Download as ZIP", data=zip_buffer, file_name="tabs_content.zip", mime="application/zip")



#zip
