with tabs[4]:
    st.header("Comparative Analysis")
    st.write("The Comparative Analysis provides a detailed comparison of the selected columns across various metrics.")

    # Select up to 6 important columns
    st.write("Select Important Columns for Comparison (Max 6)")
    all_columns = set(psi_df['Attribute']).union(set(df['Values'])).union(set(max_df[max_df.columns[0]])).union(set(missing_df[missing_df.columns[0]]))
    selected_columns = st.multiselect("Select Columns", all_columns, max_selections=6)

    if len(selected_columns) > 0:
        st.write("Comparison of Selected Columns")

        # Display other metrics comparison
        st.subheader("Metrics")
        metrics_data = {
            'Attribute': selected_columns,
            'PSI RAG': [psi_df[psi_df['Attribute'] == col]['RAG'].values[0] if col in psi_df['Attribute'].values else 'N/A' for col in selected_columns],
            'Missing Value Checks Shift': [missing_df[missing_df[missing_df.columns[0]] == col]['Shift'].values[0] if col in missing_df[missing_df.columns[0]].values else 'N/A' for col in selected_columns],
            'Shift % at Max Value Sense Check': [max_df[max_df[max_df.columns[0]] == col]['Shift %'].values[0] if col in max_df[max_df.columns[0]].values else 'N/A' for col in selected_columns],
            'Standard Deviation of Percentile Variation': [df[df['Values'] == col].iloc[:, 1:].std().mean() if col in df['Values'].values else 'N/A' for col in selected_columns]
        }

        metrics_df = pd.DataFrame(metrics_data)
        st.dataframe(metrics_df, use_container_width=True, hide_index=True)

        # Display PSI Comparison using DataDrift CSV
        st.subheader("Population Stability Index (PSI)")

        # Filter DataDrift CSV for selected columns
        psi_comparison = data_drift_df[data_drift_df['Attribute'].isin(selected_columns)]

        # Reshape the DataDrift CSV for plotting
        psi_melted = psi_comparison.melt(id_vars=['Attribute'], value_vars=['Dec PSI', 'Nov PSI', 'Oct PSI'], 
                                         var_name='Month', value_name='PSI')

        # Plotting PSI values
        psi_chart = alt.Chart(psi_melted).mark_bar().encode(
            x=alt.X('Attribute:N', title='Attribute'),
            y=alt.Y('PSI:Q', title='PSI Value'),
            color='Month:N',
            column='Month:N'
        ).properties(title="PSI Comparison")

        st.altair_chart(psi_chart, use_container_width=True)

        # Display Percentile Variation Comparison
        st.subheader("Percentile Variation")
        percentile_comparison = df[df['Values'].isin(selected_columns)]
        st.dataframe(percentile_comparison, hide_index=True)

        # Display Maximum Value Sense Checks Comparison
        st.subheader("Maximum Value Sense Checks")
        max_value_comparison = max_df[max_df[max_df.columns[0]].isin(selected_columns)]
        st.dataframe(max_value_comparison, hide_index=True)

        # Display Missing Value Checks Comparison
        st.subheader("Missing Value Checks")
        missing_value_comparison = missing_df[missing_df[missing_df.columns[0]].isin(selected_columns)]
        st.dataframe(missing_value_comparison, hide_index=True)
    else:
        st.write("Please select at least one column for comparison.")
