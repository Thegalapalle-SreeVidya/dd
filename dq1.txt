import streamlit as st
import pandas as pd
import subprocess
import webbrowser

# Function to run Jupyter Notebook
def run_notebook(uploaded_file, benchmark_months, validation_month, nodes):
    # Save the uploaded file as 'input_file.xlsx'
    with open("input_file.xlsx", "wb") as f:
        f.write(uploaded_file.getbuffer())
    
    # Execute the Jupyter Notebook with specific inputs
    try:
        result = subprocess.run(
            ["jupyter", "nbconvert", "--to", "notebook", "--execute", "--inplace", "Code_Input.ipynb"],
            check=True, capture_output=True, text=True
        )
        st.success("Notebook executed successfully!")
        
        # Load the output CSV files or process further as needed
        merged_df = pd.read_excel('merged_df.xlsx')
        st.write(merged_df)
    
    except subprocess.CalledProcessError as e:
        st.error("There was an error executing the notebook.")
        st.error(e.stdout)
        st.error(e.stderr)

# Streamlit UI
st.title("Run Jupyter Notebook with Excel Input")

# File uploader
uploaded_file = st.file_uploader("Choose an Excel file", type="xlsx")

# Parameters input
benchmark_months = st.number_input("Enter the number of Benchmark Months", min_value=1, max_value=12, value=6)
validation_month = st.number_input("Enter the month you are validating for", min_value=1, max_value=12, value=12)
nodes = st.number_input("Enter the number of nodes you want in the PSI table", min_value=1, max_value=20, value=10)

# Run notebook on button click
if st.button("Run Notebook"):
    if uploaded_file is not None:
        run_notebook(uploaded_file, benchmark_months, validation_month, nodes)
        
        # Option to proceed to the Tabs interface
        if st.button("Proceed to Tabs Interface"):
            st.write("Launching Tabs Interface...")
            # Redirect to Tabs.py
            webbrowser.open("http://localhost:8501")
            st.stop()
    else:
        st.error("Please upload an Excel file")
