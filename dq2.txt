import streamlit as st
import pandas as pd
import altair as alt

# Sample dataframe creation
data = {
    'Region': ['HBAP', 'HBAP', 'HBAP', 'HBAP', 'HBAP', 'HBAP'],
    'Country': ['MNL', 'MNL', 'MNL', 'MNL', 'MNL', 'MNL'],
    'KPIs': ['TTD', 'Approved %', 'Credit STP', 'Approved with 1 to 3 Days', 'Approved within 1 to 13 Days', 'Avg Approved TAT'],
    'May-2023': [14279, 15.54, 64.45, 38.24, 24.21, 4.66],
    'Jun-2023': [14090, 17.61, 71.86, 41.88, 25.73, 4.24],
    'Jul-2023': [19707, 12.75, 70.83, 29.8, 11.87, 4.71],
    'Aug-2023': [23661, 16.42, 70.86, 12.6, 34.23, 7.61],
    'Sep-2023': [20562, 15.88, 74.83, 19.36, 9.02, 4.77],
    'Oct-2023': [25478, 18.43, 73.63, 11.93, 26.65, 6.6],
    'Nov-2023': [23285, 14.73, 84.12, 18.58, 24.22, 6.63],
    'Dec-2023': [34318, 7.44, 88.74, 11.11, 5.92, 7.87],
    'Jan-2024': [40095, 9.4, 84.96, 17.32, 6.25, 5.02],
    'Feb-2024': [42000, 10.2, 89.0, 18.0, 7.0, 5.5] # Sample data for additional month
}

df_l = pd.DataFrame(data)

# Replacing values in the 'KPIs' column
df_l['KPIs'] = df_l['KPIs'].replace({
    'ad_Approval_rate': 'Approved %',
    'ttd_CreditSTP_rate': 'Credit STP',
    'approv_5days_Approved_rate': 'Approved with 1 to 3 Days',
    'approv_t113days_Approved_rate': 'Approved within 1 to 13 Days',
    'Avg_TAT_Approved_Days': 'Avg Approved TAT'
})

# Generate trendlines for each KPI
def generate_trendline(data_row):
    months = data.columns[3:]  # Skip 'Region', 'Country', and 'KPIs'
    values = data_row[3:]  # Corresponding values for the months
    trend_data = pd.DataFrame({'Month': months, 'Value': values})
    chart = alt.Chart(trend_data).mark_line().encode(
        x=alt.X('Month', axis=alt.Axis(labels=False)),
        y=alt.Y('Value', axis=alt.Axis(labels=False)),
    ).properties(width=100, height=20)
    return chart

trendlines = df_l.apply(generate_trendline, axis=1)

# Combine the trendlines with the original dataframe
df_l['Trend'] = trendlines

# Displaying the dataframe in Streamlit
st.markdown("***KPI Snapshot***")
for i, row in df_l.iterrows():
    st.write(row.drop('Trend').to_frame().T)  # Display the row except the Trend column
    st.altair_chart(row['Trend'])  # Display the trendline

